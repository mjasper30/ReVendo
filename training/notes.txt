How to train plastic bottles in YOLO V8
My Youtube Reference: https://youtu.be/m9fH9OWn8YM?si=0jhdtSxWxgRL199d

1. get your datasets. gather images and annotate all the images using https://cvat.ai/ make sure you annotate it in YOLO 1.1. After that export the datasets
2. Make a project structure. modify the config.yaml make sure the directory is correct and the project structure watch the video above. get the codes in his github repo -> https://github.com/computervisioneng/train-yolov8-custom-dataset-step-by-step-guide
1. install ultralytics. type the command below
pip install ultralytics
2. run the train.py. you can modify the epoch based on complexity of the object. you can check my research on what is epoch
3. you can found the runs folder based on the terminal
4. after that move the runs folder in the project. (You can check the graphs on how it looks like). Remember when the graph is getting down it means its good.
5. then run predict_image or anything that is predict to check based on your preference. done :D

CLI
yolo detect train data=config.yaml model="yolov8n.yaml" 

Google Collab (42:57) - If you want to train in google collab

Training Time
epochs=1 (25 minutes)
epochs=25 (45 minutes)
epochs=100 (1.635 hrs = 98.1 minutes)

Phone (Techno Spark 10C)
* Rear Cam - 16M
* Front Cam - 8M

Yolo V2 Camera
* 8 megapixel native resolution sensor-capable of 3280 x 2464 pixel static images
* Supports 1080p30, 720p60 and 640x480p90 video
* Size 25mm x 23mm x 9mm

Working...
Current in runs folder (well train model of plastic bottles) is in 100 epochs with (32 images train and working as September 21, 2023)

HOW TO USE THE FOLLOWING FILES
use predict_image.py
insert your image in images folder then wait for finish you can delete all the image and set the image you liked then check in the terminal if there is plastic bottle detected. note as of today it only create one bounding box

use predict_live.py
the video will saved as live_cam.mp4 and detect the video lively. idk about the speed i think it can be adjusted.

use predict_video.py
move you video into videos folder then modify the file name in -> video_path = os.path.join(VIDEOS_DIR, 'test3.mp4') example change the 'test3.mp4' into the video you want check